/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.bp2proje;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yusuf
 */
public class sipraisver extends javax.swing.JFrame {

    private String kullaniciTuru; // Kullanıcı türünü tutmak için değişken
    DefaultTableModel urunTableModel;
    DefaultTableModel sepetTableModel;
    /**
     * Creates new form sipraisver
     */
    
    public sipraisver(String kullaniciTuru) {
 this.kullaniciTuru = kullaniciTuru; // Gelen kullanıcı türünü sınıf değişkenine ata
        initComponents(); // Arayüz bileşenlerini başlat
        setLocationRelativeTo(null); // Pencereyi ekranın ortasına ayarla

        urunTableModel = (DefaultTableModel) urunTable.getModel();
        // Ürün Tablosu Modeli Ayarı
       
        sepetTableModel = (DefaultTableModel) sepetTable.getModel();
        // Sepet Tablosu Modeli Ayarı


        // Veritabanından Ürünleri Yükle
        urunleriListeyeEkle();

        // Kullanıcı türüne göre menü bar ayarı
        if ("admin".equals(kullaniciTuru)) {
            jMenu1.setEnabled(true); // Admin için etkin
        } else {
            jMenu1.setEnabled(false); // Standart kullanıcı için devre dışı
        }
    }
    private void urunleriSil() {
    Connection conn = null;
    PreparedStatement pstmt = null;

    try {
        // Veritabanına bağlan
        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/canteen?user=root&password=elbiz-2221221040");

        // 0 adetli ürünleri silen sorgu
        String deleteQuery = "DELETE FROM urunlistesi WHERE urunadedi = 0";
        pstmt = conn.prepareStatement(deleteQuery);
        int affectedRows = pstmt.executeUpdate();

        // Kullanıcıya bilgi ver
        if (affectedRows > 0) {
            JOptionPane.showMessageDialog(this, affectedRows + " adet ürün silindi!", "Başarılı", JOptionPane.INFORMATION_MESSAGE);
        } 
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Veritabanı hatası: " + ex.getMessage(), "Hata", JOptionPane.ERROR_MESSAGE);
    } finally {
        try {
            if (pstmt != null) pstmt.close();
            if (conn != null) conn.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Bağlantı kapatılırken hata oluştu: " + ex.getMessage(), "Hata", JOptionPane.ERROR_MESSAGE);
        }
    }
}
      private void urunleriListeyeEkle() {
          urunleriSil();
            Connection conn = null;
        Statement stmt = null;
        ResultSet rs = null;

        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/canteen?user=root&password=elbiz-2221221040");
            String query = "SELECT urunadi, urunfiyati, urunadedi, urunkalorisi FROM urunlistesi";
            stmt = conn.createStatement();
            rs = stmt.executeQuery(query);

            while (rs.next()) {
                String urunAdi = rs.getString("urunadi");
                double fiyat = rs.getDouble("urunfiyati");
                int adet = rs.getInt("urunadedi");
                int kalori = rs.getInt("urunkalorisi");

                // Tabloya Satır Ekleyin
                urunTableModel.addRow(new Object[]{urunAdi, fiyat, adet, kalori});
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Veritabanı hatası: " + ex.getMessage(), "Hata", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (rs != null) rs.close();
                if (stmt != null) stmt.close();
                if (conn != null) conn.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Kaynakları kapatırken hata oluştu: " + ex.getMessage(), "Hata", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        urunTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        urunAdediSpinner = new javax.swing.JSpinner();
        ekleButon = new javax.swing.JButton();
        cikarButon = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        sepetTable = new javax.swing.JTable();
        siparisverbutonu = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        uruneklemenuitem = new javax.swing.JMenuItem();
        toplamkazancigormenuitem = new javax.swing.JMenuItem();
        kullanicilarigormenuitem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 153, 0));

        jPanel1.setBackground(new java.awt.Color(255, 153, 0));

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 153));
        jLabel2.setText("Ürün Listesi");

        urunTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ürün Adı", "Ürün Fiyatı", "Ürün Adedi", "Ürün Kalorisi"
            }
        ));
        urunTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                urunTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(urunTable);

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 153));
        jLabel1.setText("Ürün Adedi Seçiniz");

        ekleButon.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        ekleButon.setForeground(new java.awt.Color(0, 51, 153));
        ekleButon.setText("Sepete Ekle");
        ekleButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ekleButonActionPerformed(evt);
            }
        });

        cikarButon.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        cikarButon.setForeground(new java.awt.Color(0, 51, 153));
        cikarButon.setText("Sepetten Çıkar");
        cikarButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cikarButonActionPerformed(evt);
            }
        });

        sepetTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ürün Adı", "Toplam Fiyat", "Ürün Adedi"
            }
        ));
        jScrollPane4.setViewportView(sepetTable);

        siparisverbutonu.setBackground(new java.awt.Color(0, 51, 153));
        siparisverbutonu.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        siparisverbutonu.setForeground(new java.awt.Color(255, 255, 255));
        siparisverbutonu.setText("Sipariş Ver");
        siparisverbutonu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siparisverbutonuActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 153));
        jLabel3.setText("Sepet");

        jLabel4.setFont(new java.awt.Font("Wide Latin", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Siparis Ekranı");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(190, 190, 190))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(335, 335, 335))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cikarButon)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ekleButon, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(urunAdediSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(siparisverbutonu, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(urunAdediSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(ekleButon, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(cikarButon, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(siparisverbutonu, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(150, Short.MAX_VALUE))
        );

        jMenu1.setText("Admin Menüsü");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        uruneklemenuitem.setText("Ürün Ayarları");
        uruneklemenuitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uruneklemenuitemActionPerformed(evt);
            }
        });
        jMenu1.add(uruneklemenuitem);

        toplamkazancigormenuitem.setText("Toplam Kazancı Gör");
        toplamkazancigormenuitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toplamkazancigormenuitemActionPerformed(evt);
            }
        });
        jMenu1.add(toplamkazancigormenuitem);

        kullanicilarigormenuitem.setText("Kullanıcıları Gör");
        kullanicilarigormenuitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kullanicilarigormenuitemActionPerformed(evt);
            }
        });
        jMenu1.add(kullanicilarigormenuitem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void siparisverbutonuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siparisverbutonuActionPerformed
 if (sepetTableModel.getRowCount() == 0) {
        JOptionPane.showMessageDialog(this, "Sepetiniz boş, lütfen ürün ekleyin!", "Hata", JOptionPane.ERROR_MESSAGE);
        return;
    }

    Object[][] sepetBilgileri = new Object[sepetTableModel.getRowCount()][sepetTableModel.getColumnCount()];
    double toplamFiyat = 0;

    for (int i = 0; i < sepetTableModel.getRowCount(); i++) {
        for (int j = 0; j < sepetTableModel.getColumnCount(); j++) {
            sepetBilgileri[i][j] = sepetTableModel.getValueAt(i, j);
        }
        toplamFiyat += (double) sepetTableModel.getValueAt(i, 1);
    }

    odemesayfasi odemeFrame = new odemesayfasi(sepetBilgileri, toplamFiyat, kullaniciTuru); // Kullanıcı türünü aktar
    odemeFrame.setLocationRelativeTo(null);
    odemeFrame.setVisible(true);
    this.dispose(); // Mevcut pencereyi kapat
    }//GEN-LAST:event_siparisverbutonuActionPerformed


    private void ekleButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ekleButonActionPerformed
  int selectedRow = urunTable.getSelectedRow(); // Seçilen satırı al

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Lütfen bir ürün seçin!", "Hata", JOptionPane.ERROR_MESSAGE);
        return;
    }

    int adet = (int) urunAdediSpinner.getValue(); // Spinner'dan adet al
    if (adet <= 0) {
        JOptionPane.showMessageDialog(this, "Geçerli bir adet girin!", "Hata", JOptionPane.ERROR_MESSAGE);
        return;
    }

    String urunAdi = (String) urunTableModel.getValueAt(selectedRow, 0); // Ürün adı
    Object fiyatObj = urunTableModel.getValueAt(selectedRow, 1); // Ürün fiyatı
    double fiyat = 0;

    if (fiyatObj instanceof Integer) {
        fiyat = ((Integer) fiyatObj).doubleValue();
    } else if (fiyatObj instanceof Double) {
        fiyat = (Double) fiyatObj;
    }

    // Sepette ürünü kontrol et
    boolean urunVar = false;
    for (int i = 0; i < sepetTableModel.getRowCount(); i++) {
        String mevcutUrunAdi = (String) sepetTableModel.getValueAt(i, 0);
        if (mevcutUrunAdi.equals(urunAdi)) { // Aynı ürün varsa
            int mevcutAdet = (int) sepetTableModel.getValueAt(i, 2);
            sepetTableModel.setValueAt(mevcutAdet + adet, i, 2); // Adeti artır
            sepetTableModel.setValueAt((mevcutAdet + adet) * fiyat, i, 1); // Toplam fiyatı güncelle
            urunVar = true;
            break;
        }
    }

    if (!urunVar) {
        sepetTableModel.addRow(new Object[]{urunAdi, fiyat * adet, adet}); // Yeni ürün ekle
    }
    }//GEN-LAST:event_ekleButonActionPerformed

    private void cikarButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cikarButonActionPerformed
       int selectedRow = sepetTable.getSelectedRow(); // Seçilen satırı al

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Lütfen sepetten bir ürün seçin!", "Hata", JOptionPane.ERROR_MESSAGE);
            return;
        }

        sepetTableModel.removeRow(selectedRow); // Seçilen satırı kaldır
    
    }//GEN-LAST:event_cikarButonActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void uruneklemenuitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uruneklemenuitemActionPerformed
        // TODO add your handling code here:
       urunlistesi urunListesiFrame = new urunlistesi(kullaniciTuru); // Kullanıcı türünü aktar
    urunListesiFrame.setLocationRelativeTo(null);
    urunListesiFrame.setVisible(true);
    this.dispose(); // Mevcut frame'i kapat
    }//GEN-LAST:event_uruneklemenuitemActionPerformed

    private void toplamkazancigormenuitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toplamkazancigormenuitemActionPerformed
        // TODO add your handling code here:
        // Fatura sayfasına yönlendirme
    Faturasayfasi faturaFrame = new Faturasayfasi(kullaniciTuru);
faturaFrame.setLocationRelativeTo(null);
faturaFrame.setVisible(true);
this.dispose();
    }//GEN-LAST:event_toplamkazancigormenuitemActionPerformed

    private void kullanicilarigormenuitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kullanicilarigormenuitemActionPerformed
        // TODO add your handling code here:
        // Kullanıcıları Gör frameine yönlendirme
    kullanicilarigor kullanicilarFrame = new kullanicilarigor(kullaniciTuru);
    kullanicilarFrame.setLocationRelativeTo(null); // Ekranı ortala
    kullanicilarFrame.setVisible(true); // Frame'i görünür yap
    this.dispose(); // Mevcut frame'i kapat (isteğe bağlı, kapatmak istemiyorsanız kaldırabilirsiniz)
    }//GEN-LAST:event_kullanicilarigormenuitemActionPerformed

    private void urunTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_urunTableMouseClicked
        int selectedRow = urunTable.getSelectedRow(); // Seçilen satırı al

        if (selectedRow != -1) {
            int mevcutAdet = (int) urunTableModel.getValueAt(selectedRow, 2); // "Adet" sütunundan stok bilgisi

            // JSpinner için yeni model oluştur ve maksimum değeri stok adedine ayarla
            SpinnerNumberModel spinnerModel = new SpinnerNumberModel(0, 0, mevcutAdet, 1);
            urunAdediSpinner.setModel(spinnerModel);
        }
    }//GEN-LAST:event_urunTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      java.awt.EventQueue.invokeLater(() -> {
        new sipraisver("standart").setVisible(true);
    });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cikarButon;
    private javax.swing.JButton ekleButon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JMenuItem kullanicilarigormenuitem;
    private javax.swing.JTable sepetTable;
    private javax.swing.JButton siparisverbutonu;
    private javax.swing.JMenuItem toplamkazancigormenuitem;
    private javax.swing.JSpinner urunAdediSpinner;
    private javax.swing.JTable urunTable;
    private javax.swing.JMenuItem uruneklemenuitem;
    // End of variables declaration//GEN-END:variables
}
